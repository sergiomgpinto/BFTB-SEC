//
// Protocol buffers definition for bftb server
//
syntax = "proto3";
package pt.tecnico.bftb.grpc;

/*----------------------------- Requests & Responses ------------------------------*/

message OpenAccountRequest{
  bytes key = 1;
}

message OpenAccountResponse{
  string response = 1;
  string publicKey = 2;
}

message SendAmountRequest{
  string senderKey = 1;
  string receiverKey = 2;
  int32 amount = 3;
}

message SendAmountResponse{
  string response = 1;
}

message CheckAccountRequest{
  string key = 1;
}

message CheckAccountResponse{
  int32 balance = 1;
  repeated string pending= 2;
}

message AuditRequest{
  string key = 1;
}

message AuditResponse{
  repeated string set = 1;
}

message ReceiveAmountRequest{
  string receiverKey = 1;
  string senderKey = 2;
  int32 transactionId = 3;
  bool answer = 4;//true for accept and false for reject
}

message ReceiveAmountResponse{
  string result = 1;
}

message SearchKeysRequest{}

message SearchKeysResponse{
  repeated string result = 1;
}

message EncryptedMessage{
  string encryptedmessage = 1;
}

//------------------------------------------- encrypted structure --------------------//
message EncryptedStruck{
  bytes encryptedhash = 1;
  Unencriptedhash unencriptedhash = 2;
}

message Unencriptedhash{
  Sequencemessage sequencemessage = 1;
  bytes senderKey = 2;
}

message Sequencemessage{
  int32 nonce = 1;
  OpenAccountRequest openAccountRequest = 2;
  OpenAccountResponse openAccountResponse = 3;
  SendAmountRequest sendAmountRequest = 4;
  SendAmountResponse sendAmountResponse = 5;
  CheckAccountRequest checkAccountRequest = 6;
  CheckAccountResponse checkAccountResponse = 7;
  AuditRequest auditRequest = 8;
  AuditResponse auditResponse = 9;
  ReceiveAmountRequest receiveAmountRequest = 10;
  ReceiveAmountResponse receiveAmountResponse = 11;
  SearchKeysRequest searchKeyRequest = 12;
  SearchKeysResponse searchKeyResponse = 13;
}

/*----------------------------- Requests & Responses ------------------------------*/

message NonceRequest{
  bytes senderKey = 1;
}

message NonceResponse{
  int32 nonce = 2;
}

/*------------------------------------ service ------------------------------------*/

service BFTB{
  rpc getNonce (NonceRequest) returns (NonceResponse);
  rpc openAccount(EncryptedStruck) returns (EncryptedStruck);
  rpc sendAmount(EncryptedStruck) returns (EncryptedStruck);
  rpc checkAccount(CheckAccountRequest) returns (CheckAccountResponse);
  rpc audit(AuditRequest) returns (AuditResponse);
  rpc receiveAmount(EncryptedStruck) returns (EncryptedStruck);
  rpc searchKeys(SearchKeysRequest) returns (SearchKeysResponse);
}

/*------------------------------------ service ------------------------------------*/





